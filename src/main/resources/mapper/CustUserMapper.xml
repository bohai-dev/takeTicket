<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.takeTicket.dao.CustUserMapper" >
  <resultMap id="BaseResultMap" type="com.example.takeTicket.domain.CustUser" >
    <id column="CUST_ID" property="custId" jdbcType="VARCHAR" />
    <result column="CREATED_AT" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="UPDATED_AT" property="updatedAt" jdbcType="TIMESTAMP" />
    <result column="SESSION_KEY" property="sessionKey" jdbcType="VARCHAR" />
    <result column="OPEN_ID" property="openId" jdbcType="VARCHAR" />
    <result column="CUST_STATE" property="custState" jdbcType="DECIMAL" />
    <result column="PARENT_ID" property="parentId" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Base_Column_List" >
    CUST_ID, CREATED_AT, UPDATED_AT, SESSION_KEY, OPEN_ID, CUST_STATE, PARENT_ID
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from CUST_USER
    where CUST_ID = #{custId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from CUST_USER
    where CUST_ID = #{custId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.takeTicket.domain.CustUser" >
    insert into CUST_USER (CUST_ID, CREATED_AT, UPDATED_AT, 
      SESSION_KEY, OPEN_ID, CUST_STATE, 
      PARENT_ID)
    values (#{custId,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{sessionKey,jdbcType=VARCHAR}, #{openId,jdbcType=VARCHAR}, #{custState,jdbcType=DECIMAL}, 
      #{parentId,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.example.takeTicket.domain.CustUser" >
    insert into CUST_USER
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="custId != null" >
        CUST_ID,
      </if>
      <if test="createdAt != null" >
        CREATED_AT,
      </if>
      <if test="updatedAt != null" >
        UPDATED_AT,
      </if>
      <if test="sessionKey != null" >
        SESSION_KEY,
      </if>
      <if test="openId != null" >
        OPEN_ID,
      </if>
      <if test="custState != null" >
        CUST_STATE,
      </if>
      <if test="parentId != null" >
        PARENT_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="custId != null" >
        #{custId,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="sessionKey != null" >
        #{sessionKey,jdbcType=VARCHAR},
      </if>
      <if test="openId != null" >
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="custState != null" >
        #{custState,jdbcType=DECIMAL},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.takeTicket.domain.CustUser" >
    update CUST_USER
    <set >
      <if test="createdAt != null" >
        CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        UPDATED_AT = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="sessionKey != null" >
        SESSION_KEY = #{sessionKey,jdbcType=VARCHAR},
      </if>
      <if test="openId != null" >
        OPEN_ID = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="custState != null" >
        CUST_STATE = #{custState,jdbcType=DECIMAL},
      </if>
      <if test="parentId != null" >
        PARENT_ID = #{parentId,jdbcType=DECIMAL},
      </if>
    </set>
    where CUST_ID = #{custId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.takeTicket.domain.CustUser" >
    update CUST_USER
    set CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
      UPDATED_AT = #{updatedAt,jdbcType=TIMESTAMP},
      SESSION_KEY = #{sessionKey,jdbcType=VARCHAR},
      OPEN_ID = #{openId,jdbcType=VARCHAR},
      CUST_STATE = #{custState,jdbcType=DECIMAL},
      PARENT_ID = #{parentId,jdbcType=DECIMAL}
    where CUST_ID = #{custId,jdbcType=VARCHAR}
  </update>
</mapper>